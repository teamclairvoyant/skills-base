type Category{
    id: String!
    catName: String!
    description:String
    isActive:Boolean!
}

type SkillDtoReturnType{
    id: String!
    skillName: String!
    description:String!
    isActive:Boolean!
}

input SkillDto{
    id: String
    skillName: String!
    description:String
    isActive:Boolean
}


enum Status{
    SUCCESS
    USER_ALREADY_EXISTS
    FAILURE
    MESSAGE_SENT

}

type SkillCategory{
    skill:Skill!
    category:Category!
    isActive:Boolean!

}
input SkillCategoryDto{
    categoryId:String!
    skillIds:[String]!
}

type Query{
    #Category Related Queries
    getCategories: [Category]!
    findCategoryById(categoryId:String!):Category!

    #Skills Related Queries
    getAllSkills: [SkillDtoReturnType]!
    findSkillById(skillId:String!):SkillDtoReturnType!
    getSkills(categoryId: String!): [Skill]!
}

type Mutation {
    #Category related Mutations
    addOrUpdateCategory(id: String, catName: String!, description :String): Category!
    deleteCategory( categoryId: String!):Status

    #Skills related Mutations
    addOrUpdateSkill(skillDto: SkillDto):  SkillDtoReturnType!
    deleteSkill( skillId: String!):Status
    addOrUpdateSkillCategory(skillCategoryDto:SkillCategoryDto):[SkillCategory]
}


type Category{
    id: String!
    catName: String!
    description:String
    isActive:Boolean!
}

type Skill{
    id: String!
    skillName: String!
    description:String
    isActive:Boolean!
}


enum Status{
    SUCCESS
    USER_ALREADY_EXISTS
    FAILURE
    MESSAGE_SENT

}

type SkillCategory{
    skill:Skill!
    category:Category!
    isActive:Boolean!

}
input SkillCategoryDto{
    categoryId:String!
    skillIds:[String]!
}

type Query{
    #Category Related Queries
    getCategories: [Category]!
    findCategoryById(categoryId:String!):Category!

    #Skills Related Queries
    getSkills: [Skill]!
    findSkillById(skillId:String!):Skill!
    getSkills(categoryId: String!): [Skill]!
}

type Mutation {
    #Category related Mutations
    addOrUpdateCategory(catName: String!, description :String): Category!
    deleteCategory( categoryId: String!):Status

    #Skills related Mutations
    addOrUpdateSkill(skillName:String!,description:String,isActive: Boolean!):  Skill!
    deleteSkill( skillId: String!):Status
    addOrUpdateSkillCategory(skillCategoryDto:SkillCategoryDto):[SkillCategory]
}

